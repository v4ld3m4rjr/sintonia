
import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import json
import os
from datetime import datetime
import supabase
from dotenv import load_dotenv

# Importar os m√≥dulos de avalia√ß√£o
from mental_assessment import mental_assessment_page
# Assumindo que estes m√≥dulos existem no seu projeto
# from readiness_assessment import readiness_assessment_page
# from trimp_evaluation import trimp_evaluation_page

# Carregar vari√°veis de ambiente
load_dotenv()

# Configura√ß√£o do Supabase
SUPABASE_URL = os.getenv("SUPABASE_URL")
SUPABASE_KEY = os.getenv("SUPABASE_KEY")

# Inicializar cliente Supabase
supabase_client = supabase.create_client(SUPABASE_URL, SUPABASE_KEY)

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Sintonia - An√°lise de Treinamento",
    page_icon="üèÉ",
    layout="wide",
    initial_sidebar_state="expanded"
)

# Fun√ß√£o para verificar login
def check_login():
    if 'user_id' not in st.session_state:
        st.session_state.user_id = "user123"  # Tempor√°rio para teste - substitua pela sua l√≥gica de autentica√ß√£o
        # Na vers√£o real, voc√™ deve verificar se o usu√°rio est√° autenticado
        # e redirecionar para a p√°gina de login se n√£o estiver

# P√°gina inicial
def home_page():
    st.title("Bem-vindo ao Sintonia")
    st.subheader("Sua plataforma completa de an√°lise de treinamento")

    st.write("""
    O Sintonia oferece ferramentas avan√ßadas para monitorar e analisar seu treinamento:

    - **Avalia√ß√£o de Prontid√£o**: Avalie sua disposi√ß√£o para treinar
    - **Avalia√ß√£o TRIMP**: Analise a carga de treinamento
    - **Avalia√ß√£o Mental**: Monitore ansiedade, estresse e fadiga mental

    Selecione uma op√ß√£o no menu lateral para come√ßar.
    """)

    # Mostrar estat√≠sticas ou gr√°ficos recentes
    st.subheader("Resumo das suas avalia√ß√µes recentes")

    # Exemplo de gr√°fico (substitua por dados reais)
    data = {
        'Categoria': ['Prontid√£o', 'TRIMP', 'Ansiedade', 'Estresse', 'Fadiga Mental'],
        'Valor': [7, 120, 5, 15, 8]
    }
    df = pd.DataFrame(data)

    fig, ax = plt.subplots(figsize=(10, 5))
    ax.bar(df['Categoria'], df['Valor'], color=['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd'])
    ax.set_title('√öltimas Avalia√ß√µes')
    ax.set_ylabel('Pontua√ß√£o')
    ax.grid(axis='y', linestyle='--', alpha=0.7)

    st.pyplot(fig)

# P√°gina de configura√ß√µes
def settings_page():
    st.title("Configura√ß√µes")

    st.subheader("Perfil do Usu√°rio")
    col1, col2 = st.columns(2)

    with col1:
        st.text_input("Nome", value="Usu√°rio Exemplo")
        st.text_input("Email", value="usuario@exemplo.com")

    with col2:
        st.number_input("Idade", min_value=10, max_value=100, value=30)
        st.selectbox("Sexo", options=["Masculino", "Feminino", "Outro"])

    st.subheader("Prefer√™ncias")
    st.checkbox("Receber notifica√ß√µes por email")
    st.checkbox("Modo escuro", value=True)

    if st.button("Salvar Configura√ß√µes"):
        st.success("Configura√ß√µes salvas com sucesso!")

# Fun√ß√£o principal
def main():
    # Verificar login
    check_login()

    # Sidebar
    st.sidebar.title("Sintonia")
    st.sidebar.image("https://via.placeholder.com/150", width=150)

    # Menu de navega√ß√£o
    menu = ["In√≠cio", "Avalia√ß√£o de Prontid√£o", "Avalia√ß√£o TRIMP", "Avalia√ß√£o Mental", "Configura√ß√µes"]
    choice = st.sidebar.selectbox("Menu", menu)

    # Exibir p√°gina selecionada
    if choice == "In√≠cio":
        home_page()
    elif choice == "Avalia√ß√£o de Prontid√£o":
        # Substitua pelo seu c√≥digo real
        st.title("Avalia√ß√£o de Prontid√£o")
        st.write("Esta funcionalidade ser√° implementada em breve.")
        # readiness_assessment_page()  # Descomente quando o m√≥dulo estiver dispon√≠vel
    elif choice == "Avalia√ß√£o TRIMP":
        # Substitua pelo seu c√≥digo real
        st.title("Avalia√ß√£o TRIMP")
        st.write("Esta funcionalidade ser√° implementada em breve.")
        # trimp_evaluation_page()  # Descomente quando o m√≥dulo estiver dispon√≠vel
    elif choice == "Avalia√ß√£o Mental":
        # Nova funcionalidade de avalia√ß√£o mental
        mental_assessment_page()
    elif choice == "Configura√ß√µes":
        settings_page()

    # Footer
    st.sidebar.markdown("---")
    st.sidebar.info("¬© 2023 Sintonia - Todos os direitos reservados")

if __name__ == "__main__":
    main()
