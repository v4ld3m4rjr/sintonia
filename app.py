
import streamlit as st
import supabase
import json

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Sintonia - Diagn√≥stico",
    page_icon="üß†",
    layout="wide"
)

# Fun√ß√£o para inicializar conex√£o com Supabase
def init_connection():
    try:
        # Tentar obter credenciais dos secrets
        url = st.secrets.get("supabase_url", "")
        key = st.secrets.get("supabase_key", "")

        if not url or not key:
            st.warning("Credenciais do Supabase n√£o encontradas em st.secrets")
            # Verificar vari√°veis de ambiente
            import os
            url = os.environ.get("SUPABASE_URL", "")
            key = os.environ.get("SUPABASE_KEY", "")

            if url and key:
                st.success("Credenciais encontradas nas vari√°veis de ambiente")
            else:
                st.error("Credenciais n√£o encontradas nas vari√°veis de ambiente")
                return None

        client = supabase.create_client(url, key)
        return client
    except Exception as e:
        st.error(f"Erro ao conectar com Supabase: {str(e)}")
        return None

# T√≠tulo da p√°gina
st.title("Diagn√≥stico de Conex√£o com Supabase")

# Testar conex√£o
st.subheader("1. Teste de Conex√£o")
supabase_client = init_connection()

if supabase_client:
    st.success("‚úÖ Conex√£o com Supabase estabelecida com sucesso!")
else:
    st.error("‚ùå Falha na conex√£o com Supabase")
    st.info("Verifique se as credenciais est√£o configuradas corretamente em st.secrets ou vari√°veis de ambiente.")

# Formul√°rio para testar login
st.subheader("2. Teste de Login")
with st.form("test_login"):
    username = st.text_input("Usu√°rio")
    password = st.text_input("Senha", type="password")
    submit = st.form_submit_button("Testar Login")

    if submit and supabase_client:
        try:
            # Consultar usu√°rio
            response = supabase_client.table("users").select("*").eq("username", username).execute()

            st.write("Resposta da consulta:")
            st.json(json.dumps(response.dict()))

            if response.data:
                user = response.data[0]
                if user.get("password") == password:
                    st.success(f"‚úÖ Login bem-sucedido para o usu√°rio: {username}")
                else:
                    st.error("‚ùå Senha incorreta")
            else:
                st.error(f"‚ùå Usu√°rio '{username}' n√£o encontrado")
        except Exception as e:
            st.error(f"Erro ao consultar usu√°rio: {str(e)}")

# Listar usu√°rios (apenas para diagn√≥stico)
st.subheader("3. Usu√°rios Cadastrados")
if supabase_client:
    try:
        with st.expander("Ver usu√°rios cadastrados"):
            response = supabase_client.table("users").select("username, email, created_at").execute()

            if response.data:
                import pandas as pd
                df = pd.DataFrame(response.data)
                st.dataframe(df)
            else:
                st.info("Nenhum usu√°rio cadastrado")
    except Exception as e:
        st.error(f"Erro ao listar usu√°rios: {str(e)}")

# Formul√°rio para criar usu√°rio de teste
st.subheader("4. Criar Usu√°rio de Teste")
with st.form("create_test_user"):
    new_username = st.text_input("Novo Usu√°rio")
    new_password = st.text_input("Nova Senha", type="password")
    new_email = st.text_input("Email", value="teste@example.com")
    submit = st.form_submit_button("Criar Usu√°rio de Teste")

    if submit and supabase_client and new_username and new_password:
        try:
            # Verificar se usu√°rio j√° existe
            check = supabase_client.table("users").select("username").eq("username", new_username).execute()

            if check.data:
                st.error(f"Usu√°rio '{new_username}' j√° existe")
            else:
                # Criar novo usu√°rio
                data = {
                    "username": new_username,
                    "password": new_password,
                    "email": new_email,
                    "age": 30,
                    "gender": "N√£o informado"
                }

                response = supabase_client.table("users").insert(data).execute()
                st.success(f"‚úÖ Usu√°rio de teste '{new_username}' criado com sucesso!")
                st.json(json.dumps(response.dict()))
        except Exception as e:
            st.error(f"Erro ao criar usu√°rio: {str(e)}")
