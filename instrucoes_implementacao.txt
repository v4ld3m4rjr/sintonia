# Instruções Passo a Passo para Implementação

Este documento contém instruções detalhadas para implementar o Sistema de Monitoramento do Atleta, explicadas de forma simples para quem não tem conhecimentos técnicos avançados.

## O que você vai precisar:

- Conta no **GitHub** (para armazenar os arquivos)
- Conta no **Supabase** (para o banco de dados)
- Conta no **Render** (para hospedagem)
- Sua logomarca em formato de imagem (PNG ou JPG), redimensionada para 500 pixels

## Passo 1: Preparar a imagem da logomarca

1. Redimensione sua logomarca para ter 500 pixels em sua maior dimensão
2. Salve-a como "logo.png"

## Passo 2: Criar um repositório no GitHub

1. Vá para [GitHub](https://github.com/)
2. Faça login na sua conta (ou crie uma se não tiver)
3. Clique no botão verde "+ New" para criar um novo repositório
4. Dê um nome ao repositório (por exemplo, "sistema-monitoramento-atleta")
5. Deixe-o como "Public" e clique em "Create Repository"

## Passo 3: Fazer upload dos arquivos no GitHub

1. No seu novo repositório, clique no botão "Add file" e escolha "Upload files"
2. Arraste todos os arquivos baixados para a área de upload:
   - app.py
   - readiness_assessment.py
   - training_assessment.py
   - psychological_assessment.py
   - requirements.txt
   - schema_update.sql
   - README.md
   - logo.png (sua logomarca)
3. Clique em "Commit changes"

## Passo 4: Configurar o banco de dados no Supabase

1. Vá para [Supabase](https://supabase.com/)
2. Faça login ou crie uma conta
3. Clique em "New Project"
4. Dê um nome ao projeto (por exemplo, "sistema-monitoramento-atleta")
5. Digite uma senha forte para o banco de dados e anote-a em algum lugar
6. Escolha a região mais próxima do seu local
7. Clique em "Create new project" e aguarde a criação (pode levar alguns minutos)
8. Uma vez criado, vá até a seção "Project Settings" (ícone de engrenagem) → "API"
9. Copie a URL e a chave anon/public (você precisará desses valores mais tarde)

## Passo 5: Executar o script SQL para criar as tabelas

1. No Supabase, vá para a seção "SQL Editor" no menu lateral
2. Clique em "New query"
3. Copie e cole todo o conteúdo do arquivo "schema_update.sql"
4. Clique em "Run" para executar o script
5. Verifique se as tabelas foram criadas na seção "Table Editor"

## Passo 6: Criar o serviço web no Render

1. Vá para [Render](https://render.com/)
2. Faça login ou crie uma conta
3. Na dashboard, clique em "New" e selecione "Web Service"
4. Clique em "Build and deploy from a Git repository"
5. Conecte sua conta GitHub e selecione o repositório que você criou
6. Preencha os seguintes campos:
   - **Name**: sistema-monitoramento-atleta (ou outro nome de sua escolha)
   - **Environment**: Python 3
   - **Region**: Escolha a mais próxima do seu local
   - **Branch**: main
   - **Build Command**: `pip install -r requirements.txt`
   - **Start Command**: `streamlit run app.py`

## Passo 7: Configurar variáveis de ambiente no Render

1. Na mesma tela de configuração do Render, role para baixo até "Environment Variables"
2. Adicione duas variáveis:
   - **SUPABASE_URL**: Cole a URL que você copiou do Supabase
   - **SUPABASE_KEY**: Cole a chave anon/public que você copiou do Supabase
3. Clique em "Create Web Service"

## Passo 8: Aguardar a implantação

1. O Render começará a implantar seu aplicativo. Isso pode levar alguns minutos.
2. Quando estiver concluído, você verá um status "Live" e um URL para acessar o aplicativo.

## Passo 9: Testar o aplicativo

1. Clique no URL fornecido pelo Render para abrir seu aplicativo
2. Crie uma conta de usuário para testar
3. Explore todas as funcionalidades:
   - Avaliação de Prontidão
   - Estado de Treino
   - Avaliação Psicoemocional
   - Dashboard

## Solução de problemas comuns:

### Se o aplicativo não carregar:
- Verifique os logs no Render para identificar erros
- Confirme se as variáveis de ambiente foram configuradas corretamente
- Verifique se todos os arquivos foram enviados para o GitHub

### Se ocorrer erro ao salvar dados:
- Verifique se o script SQL foi executado corretamente no Supabase
- Confirme se as tabelas possuem as colunas necessárias

### Para fazer alterações no aplicativo:
1. Faça as alterações nos arquivos
2. Faça upload dos arquivos modificados para o GitHub
3. O Render irá automaticamente reimplantar o aplicativo

## Manutenção contínua:

- Você pode monitorar o uso do seu aplicativo no painel do Render
- O Supabase possui ferramentas para monitorar o banco de dados
- Para atualizar o aplicativo, basta fazer upload das novas versões dos arquivos para o GitHub